// Code generated by groq-modeler DO NOT EDIT.
//
// groq-modeler Version 1.0.0

package groq

// Endpoint is the endpoint for the groq api.
// string
type Endpoint string

// Model is the type for models present on the groq api.
// string
type Model string

const (
	completionsSuffix     Endpoint = "/completions"
	chatCompletionsSuffix Endpoint = "/chat/completions"
	transcriptionsSuffix  Endpoint = "/audio/transcriptions"
	translationsSuffix    Endpoint = "/audio/translations"
	embeddingsSuffix      Endpoint = "/embeddings"
	
{{- range $model := .Models }}
	{{ $model.Name }} Model = "{{ $model.ID }}" {{- end }}
)

// String returns the string representation of the Endpoint.
func (e Endpoint) String() string {
	return string(e)
}

var disabledModelsForEndpoints = map[Endpoint]map[Model]bool{
	completionsSuffix: {
	{{- range $model := .Models }} {{ if isAudioModel $model }}
			{{ $model.Name }}: true, {{- end }} {{- end }} 
	},
	chatCompletionsSuffix: {
	{{- range $model := .Models }} {{ if isAudioModel $model }}
			{{ $model.Name }}: true, {{- end }} {{- end }}
	},
	transcriptionsSuffix: {
	{{- range $model := .Models }} {{ if isTextModel $model }}
			{{ $model.Name }}: true, {{- end }} {{- end }}
	},
	translationsSuffix: {
	{{- range $model := .Models }} {{ if isTextModel $model }}
			{{ $model.Name }}: true, {{- end }} {{- end }}
	},
}

func endpointSupportsModel(endpoint Endpoint, model Model) bool {
	return !disabledModelsForEndpoints[endpoint][model]
}

