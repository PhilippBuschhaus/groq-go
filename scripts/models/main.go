package main

import (
	"context"
	"log"
	"os"

	"github.com/conneroisu/groq-go"
)

const (
	outputFile       = "models.go"
	outputFileHeader = `
// Code generated by groq-modeler DO NOT EDIT.

package groq

`
	constTmpComment = "%s is a model from %s and has a %d context window."
	modelsInitURL   = "https://console.groq.com/docs/models"
)

// each model~:
//
// Distil-Whisper English
//
//     Model ID: distil-whisper-large-v3-en
//     Developer: HuggingFace
//     Max File Size: 25 MB
//     [ Model Card ](https://huggingface.co/distil-whisper-large-v3-en)
//
// Need to then go to the huggingface page and take the first tag Text-Generation (Llama) or Automatic-Speech-Recognition (Whisper).

// main is the entry point for the application.
func main() {
	ctx := context.Background()
	if err := run(ctx); err != nil {
		log.Fatal(err)
	}
}

// run runs the main function.
func run(ctx context.Context) error {
	key := os.Getenv("GROQ_KEY")
	q, err := groq.NewClient(key)
	if err != nil {
		return err
	}
	models, err := q.GetModels(ctx)
	if err != nil {
		return err
	}
	println(models.Data[0].ID)
	return nil
}
